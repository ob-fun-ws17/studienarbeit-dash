-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Server for Dash
--   
--   Please see the README on Github at
--   <a>https://github.com/githubuser/studienarbeit-dash#readme</a>
@package dash-server
@version 0.1.0


-- | This module contains the custom database types which for some reason
--   can't be in the same file as the database entities. Also there are the
--   types to derive ToJSON and FromJSON which are only used for the API
--   and not as database entities.
module Types

-- | Status of a Todo
data Status

-- | not yet started
Open :: Status

-- | started but not finished
InProgress :: Status

-- | finished
Closed :: Status

-- | PersistFieldSql instances for Status

-- | PersistFieldSql instances for Status

-- | FromJSON and ToJSON instances for Status

-- | FromJSON and ToJSON instances for Status

-- | Priority of a Todo
data Priority

-- | Low Priority
Low :: Priority

-- | Medium Priority
Middle :: Priority

-- | High Priority
High :: Priority

-- | PersistFieldSql instances for Priority

-- | PersistFieldSql instances for Priority

-- | FromJSON and ToJSON instances for Priority

-- | FromJSON and ToJSON instances for Priority

-- | A Dependency element to be used as JSON for the TaskAPI
data Dependency
Dependency :: Int -> Int -> Int -> Dependency

-- | the key of the task to depend on
[depends] :: Dependency -> Int

-- | major release number
[major] :: Dependency -> Int

-- | mionr release number
[minor] :: Dependency -> Int

-- | FromJSON and ToJSON instances for Dependency

-- | FromJSON and ToJSON instances for Dependency

-- | A Task element to be used as JSON for the TaskAPI
data Task
Task :: String -> [Dependency] -> Task

-- | the name of the task
[name] :: Task -> String
[dependencies] :: Task -> [Dependency]

-- | FromJSON and ToJSON instances for Task

-- | FromJSON and ToJSON instances for Task
instance Data.Aeson.Types.ToJSON.ToJSON Types.Task
instance Data.Aeson.Types.FromJSON.FromJSON Types.Task
instance GHC.Generics.Generic Types.Task
instance GHC.Classes.Ord Types.Task
instance GHC.Classes.Eq Types.Task
instance GHC.Read.Read Types.Task
instance GHC.Show.Show Types.Task
instance Data.Aeson.Types.ToJSON.ToJSON Types.Dependency
instance Data.Aeson.Types.FromJSON.FromJSON Types.Dependency
instance GHC.Generics.Generic Types.Dependency
instance GHC.Classes.Ord Types.Dependency
instance GHC.Classes.Eq Types.Dependency
instance GHC.Read.Read Types.Dependency
instance GHC.Show.Show Types.Dependency
instance Data.Aeson.Types.ToJSON.ToJSON Types.Priority
instance Data.Aeson.Types.FromJSON.FromJSON Types.Priority
instance Database.Persist.Class.PersistField.PersistField Types.Priority
instance Database.Persist.Sql.Class.PersistFieldSql Types.Priority
instance GHC.Generics.Generic Types.Priority
instance GHC.Classes.Ord Types.Priority
instance GHC.Classes.Eq Types.Priority
instance GHC.Read.Read Types.Priority
instance GHC.Show.Show Types.Priority
instance Data.Aeson.Types.ToJSON.ToJSON Types.Status
instance Data.Aeson.Types.FromJSON.FromJSON Types.Status
instance Database.Persist.Class.PersistField.PersistField Types.Status
instance Database.Persist.Sql.Class.PersistFieldSql Types.Status
instance GHC.Generics.Generic Types.Status
instance GHC.Classes.Ord Types.Status
instance GHC.Classes.Eq Types.Status
instance GHC.Read.Read Types.Status
instance GHC.Show.Show Types.Status


-- | This module contains all the entities for the database. The
--   corresponding types are generated using TemplateHaskell and
--   QuasiQuotes.
module Entity

-- | FromJSON and ToJSON instances

-- | FromJSON and ToJSON instances

-- | FromJSON and ToJSON instances

-- | FromJSON and ToJSON instances

-- | FromJSON and ToJSON instances

-- | FromJSON and ToJSON instances

-- | FromJSON and ToJSON instances

-- | FromJSON and ToJSON instances

-- | FromJSON and ToJSON instances

-- | FromJSON and ToJSON instances

-- | runs a database query
runDb :: ConnectionPool -> SqlPersistT IO b -> Handler b
instance Data.Aeson.Types.ToJSON.ToJSON Entity.Category
instance Data.Aeson.Types.FromJSON.FromJSON Entity.Category
instance Data.Aeson.Types.ToJSON.ToJSON Entity.Todo
instance Data.Aeson.Types.FromJSON.FromJSON Entity.Todo
instance Data.Aeson.Types.ToJSON.ToJSON Entity.DbTask
instance Data.Aeson.Types.FromJSON.FromJSON Entity.DbTask
instance Data.Aeson.Types.ToJSON.ToJSON Entity.DbDependency
instance Data.Aeson.Types.FromJSON.FromJSON Entity.DbDependency
instance Data.Aeson.Types.ToJSON.ToJSON Entity.Test
instance Data.Aeson.Types.FromJSON.FromJSON Entity.Test
instance GHC.Generics.Generic Entity.Todo
instance GHC.Show.Show Entity.Todo
instance GHC.Read.Read Entity.Todo
instance GHC.Classes.Eq Entity.Todo
instance GHC.Generics.Generic Entity.DbTask
instance GHC.Show.Show Entity.DbTask
instance GHC.Read.Read Entity.DbTask
instance GHC.Classes.Eq Entity.DbTask
instance GHC.Generics.Generic Entity.Category
instance GHC.Show.Show Entity.Category
instance GHC.Read.Read Entity.Category
instance GHC.Classes.Eq Entity.Category
instance GHC.Generics.Generic Entity.Test
instance GHC.Show.Show Entity.Test
instance GHC.Read.Read Entity.Test
instance GHC.Classes.Eq Entity.Test
instance Data.Aeson.Types.FromJSON.FromJSON (Database.Persist.Class.PersistEntity.Key Entity.Test)
instance Data.Aeson.Types.ToJSON.ToJSON (Database.Persist.Class.PersistEntity.Key Entity.Test)
instance Database.Persist.Sql.Class.PersistFieldSql (Database.Persist.Class.PersistEntity.Key Entity.Test)
instance Database.Persist.Class.PersistField.PersistField (Database.Persist.Class.PersistEntity.Key Entity.Test)
instance Web.Internal.HttpApiData.FromHttpApiData (Database.Persist.Class.PersistEntity.Key Entity.Test)
instance Web.Internal.HttpApiData.ToHttpApiData (Database.Persist.Class.PersistEntity.Key Entity.Test)
instance Web.PathPieces.PathPiece (Database.Persist.Class.PersistEntity.Key Entity.Test)
instance GHC.Classes.Ord (Database.Persist.Class.PersistEntity.Key Entity.Test)
instance GHC.Classes.Eq (Database.Persist.Class.PersistEntity.Key Entity.Test)
instance GHC.Read.Read (Database.Persist.Class.PersistEntity.Key Entity.Test)
instance GHC.Show.Show (Database.Persist.Class.PersistEntity.Key Entity.Test)
instance Data.Aeson.Types.FromJSON.FromJSON (Database.Persist.Class.PersistEntity.Key Entity.Category)
instance Data.Aeson.Types.ToJSON.ToJSON (Database.Persist.Class.PersistEntity.Key Entity.Category)
instance Database.Persist.Sql.Class.PersistFieldSql (Database.Persist.Class.PersistEntity.Key Entity.Category)
instance Database.Persist.Class.PersistField.PersistField (Database.Persist.Class.PersistEntity.Key Entity.Category)
instance Web.Internal.HttpApiData.FromHttpApiData (Database.Persist.Class.PersistEntity.Key Entity.Category)
instance Web.Internal.HttpApiData.ToHttpApiData (Database.Persist.Class.PersistEntity.Key Entity.Category)
instance Web.PathPieces.PathPiece (Database.Persist.Class.PersistEntity.Key Entity.Category)
instance GHC.Classes.Ord (Database.Persist.Class.PersistEntity.Key Entity.Category)
instance GHC.Classes.Eq (Database.Persist.Class.PersistEntity.Key Entity.Category)
instance GHC.Read.Read (Database.Persist.Class.PersistEntity.Key Entity.Category)
instance GHC.Show.Show (Database.Persist.Class.PersistEntity.Key Entity.Category)
instance Data.Aeson.Types.FromJSON.FromJSON (Database.Persist.Class.PersistEntity.Key Entity.DbTask)
instance Data.Aeson.Types.ToJSON.ToJSON (Database.Persist.Class.PersistEntity.Key Entity.DbTask)
instance Database.Persist.Sql.Class.PersistFieldSql (Database.Persist.Class.PersistEntity.Key Entity.DbTask)
instance Database.Persist.Class.PersistField.PersistField (Database.Persist.Class.PersistEntity.Key Entity.DbTask)
instance Web.Internal.HttpApiData.FromHttpApiData (Database.Persist.Class.PersistEntity.Key Entity.DbTask)
instance Web.Internal.HttpApiData.ToHttpApiData (Database.Persist.Class.PersistEntity.Key Entity.DbTask)
instance Web.PathPieces.PathPiece (Database.Persist.Class.PersistEntity.Key Entity.DbTask)
instance GHC.Classes.Ord (Database.Persist.Class.PersistEntity.Key Entity.DbTask)
instance GHC.Classes.Eq (Database.Persist.Class.PersistEntity.Key Entity.DbTask)
instance GHC.Read.Read (Database.Persist.Class.PersistEntity.Key Entity.DbTask)
instance GHC.Show.Show (Database.Persist.Class.PersistEntity.Key Entity.DbTask)
instance Data.Aeson.Types.FromJSON.FromJSON (Database.Persist.Class.PersistEntity.Key Entity.DbDependency)
instance Data.Aeson.Types.ToJSON.ToJSON (Database.Persist.Class.PersistEntity.Key Entity.DbDependency)
instance Database.Persist.Sql.Class.PersistFieldSql (Database.Persist.Class.PersistEntity.Key Entity.DbDependency)
instance Database.Persist.Class.PersistField.PersistField (Database.Persist.Class.PersistEntity.Key Entity.DbDependency)
instance Web.Internal.HttpApiData.FromHttpApiData (Database.Persist.Class.PersistEntity.Key Entity.DbDependency)
instance Web.Internal.HttpApiData.ToHttpApiData (Database.Persist.Class.PersistEntity.Key Entity.DbDependency)
instance Web.PathPieces.PathPiece (Database.Persist.Class.PersistEntity.Key Entity.DbDependency)
instance GHC.Classes.Ord (Database.Persist.Class.PersistEntity.Key Entity.DbDependency)
instance GHC.Classes.Eq (Database.Persist.Class.PersistEntity.Key Entity.DbDependency)
instance GHC.Read.Read (Database.Persist.Class.PersistEntity.Key Entity.DbDependency)
instance GHC.Show.Show (Database.Persist.Class.PersistEntity.Key Entity.DbDependency)
instance Data.Aeson.Types.FromJSON.FromJSON (Database.Persist.Class.PersistEntity.Key Entity.Todo)
instance Data.Aeson.Types.ToJSON.ToJSON (Database.Persist.Class.PersistEntity.Key Entity.Todo)
instance Database.Persist.Sql.Class.PersistFieldSql (Database.Persist.Class.PersistEntity.Key Entity.Todo)
instance Database.Persist.Class.PersistField.PersistField (Database.Persist.Class.PersistEntity.Key Entity.Todo)
instance Web.Internal.HttpApiData.FromHttpApiData (Database.Persist.Class.PersistEntity.Key Entity.Todo)
instance Web.Internal.HttpApiData.ToHttpApiData (Database.Persist.Class.PersistEntity.Key Entity.Todo)
instance Web.PathPieces.PathPiece (Database.Persist.Class.PersistEntity.Key Entity.Todo)
instance GHC.Classes.Ord (Database.Persist.Class.PersistEntity.Key Entity.Todo)
instance GHC.Classes.Eq (Database.Persist.Class.PersistEntity.Key Entity.Todo)
instance GHC.Read.Read (Database.Persist.Class.PersistEntity.Key Entity.Todo)
instance GHC.Show.Show (Database.Persist.Class.PersistEntity.Key Entity.Todo)
instance Database.Persist.Class.PersistField.PersistField Entity.Test
instance Database.Persist.Sql.Class.PersistFieldSql Entity.Test
instance Database.Persist.Class.PersistField.PersistField Entity.Category
instance Database.Persist.Sql.Class.PersistFieldSql Entity.Category
instance Database.Persist.Class.PersistField.PersistField Entity.DbTask
instance Database.Persist.Sql.Class.PersistFieldSql Entity.DbTask
instance Database.Persist.Class.PersistField.PersistField Entity.DbDependency
instance Database.Persist.Sql.Class.PersistFieldSql Entity.DbDependency
instance Database.Persist.Class.PersistField.PersistField Entity.Todo
instance Database.Persist.Sql.Class.PersistFieldSql Entity.Todo
instance Database.Persist.Class.PersistEntity.PersistEntity Entity.Test
instance Database.Persist.Class.PersistStore.ToBackendKey Database.Persist.Sql.Types.Internal.SqlBackend Entity.Test
instance Database.Persist.Class.PersistEntity.PersistEntity Entity.Category
instance Database.Persist.Class.PersistStore.ToBackendKey Database.Persist.Sql.Types.Internal.SqlBackend Entity.Category
instance Database.Persist.Class.PersistEntity.PersistEntity Entity.DbTask
instance Database.Persist.Class.PersistStore.ToBackendKey Database.Persist.Sql.Types.Internal.SqlBackend Entity.DbTask
instance Database.Persist.Class.PersistEntity.PersistEntity Entity.DbDependency
instance Database.Persist.Class.PersistStore.ToBackendKey Database.Persist.Sql.Types.Internal.SqlBackend Entity.DbDependency
instance Database.Persist.Class.PersistEntity.PersistEntity Entity.Todo
instance Database.Persist.Class.PersistStore.ToBackendKey Database.Persist.Sql.Types.Internal.SqlBackend Entity.Todo


-- | This module contains the TaskAPI and its implementation.
module Task

-- | The Rest API hadling tasks. All its services' uri- paths start with
--   "<i>task</i>"
type TaskAPI = "task" :> (("add" :> (ReqBody '[JSON] Task :> Get '[JSON] [DbDependency])) :<|> ("sort" :> Get '[JSON] [Int]))

-- | Implementation of the TaskAPI
taskServer :: ConnectionPool -> Server TaskAPI

-- | Computes a list of dependencies
concatDep :: [Int] -> [(Int, Int)] -> [(Int, [Int])]

-- | Sorts dependencies
sortDep :: [(Int, [Int])] -> [Int]


-- | This module contains the TodoAPI and its implementation.
module Todo

-- | The Rest API hadling todos. All its services' uri- paths start with
--   "<i>todo</i>"
type TodoAPI = "todo" :> (Get '[JSON] [Todo] :<|> (("add" :> (ReqBody '[JSON] Todo :> Get '[JSON] (Key Todo))) :<|> ((Capture "id" Int64 :> Get '[JSON] Todo) :<|> (("remove" :> (Capture "id" Int64 :> Get '[JSON] ())) :<|> ("check" :> Get '[JSON] [Todo])))))

-- | Implementation of the TodoAPI
todoServer :: ConnectionPool -> Server TodoAPI

-- | Checks for all given Todos whether or not there is enought time left
--   for them to be compleated TODO: use duration
checkTodoDeadline' :: [Todo] -> Day -> [Todo]

-- | Returns today as an IO Monad of Day
getToday :: IO Day


-- | This module controls the logging, initializes the database and starts
--   the Servant server.
module Server

-- | The executable Application
app :: ConnectionPool -> Application

-- | Initializes the Application with logging to StdErr and migrates the
--   database
initApp :: FilePath -> IO Application
